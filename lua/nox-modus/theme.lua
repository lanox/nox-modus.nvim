
local c = require('nox-modus.palette')

local hl = vim.api.nvim_set_hl
local theme = {}

theme.set_highlights = function()

  -- editor
  hl(0, "Normal", { fg = c.gray13, bg = c.bg })
  hl(0, "Insert", { fg = c.red, bg = c.orange })
  hl(0, "SignColumn", { fg = 'NONE', bg = c.bg })
  hl(0, "MsgArea", { fg = c.fg, bg = c.bg })
  hl(0, "ModeMsg", { fg = c.fg, bg = c.bg })
  hl(0, "SpellBad", { fg = 'NONE', bg = 'NONE', sp = c.red, undercurl=true, })
  hl(0, "SpellCap", { fg = 'NONE', bg = 'NONE', sp = c.yellow, undercurl=true, })
  hl(0, "SpellLocal", { fg = 'NONE', bg = 'NONE', sp = c.green, underline=true, })
  hl(0, "SpellRare", { fg = 'NONE', bg = 'NONE', sp = c.purple, underline=true, })
  hl(0, "NormalNC", { fg = c.fg, bg = c.bg })
  hl(0, "Pmenu", { fg = c.fg, bg = c.subtle_black })
  hl(0, "PmenuSel", { fg = c.black, bg = c.gray13 })
  hl(0, "PmenuSbar", { fg = c.fg, bg = c.subtle_black })
  hl(0, "PmenuThumb", { fg = c.fg, bg = c.gray05 })
  hl(0, "WildMenu", { fg = c.fg, bg = c.black })
  hl(0, "LineNr", { fg = c.gray09, bg = 'NONE' })
  hl(0, "CursorLineNr", { fg = c.gray15, bg = 'NONE', bold=true, })
  hl(0, "CursorLine", { fg = 'NONE', bg = c.subtle_black })
  hl(0, "Folded", { fg = c.gray04, bg = 'NONE' })
  hl(0, "FoldColumn", { fg = c.gray09, bg = 'NONE' })
  hl(0, "Whitespace", { fg = c.bg, bg = 'NONE' })
  hl(0, "CursorColumn", { fg = 'NONE', bg = c.subtle_black })
  hl(0, "ColorColumn", { fg = 'NONE', bg = c.gray09 })
  hl(0, "NormalFloat", { fg = 'NONE', bg = 'NONE' })
  hl(0, "FloatBoder", { fg = c.gray13, bg = c.bg })
  hl(0, "Visual", { fg = 'NONE', bg = c.gray01 })
  hl(0, "VisualNOS", { fg = 'NONE', bg = c.red })
  hl(0, "WarningMsg", { fg = c.error, bg = c.bg })
  hl(0, "DiffText", { fg = c.bg, bg = c.sign_delete })
  hl(0, "DiffAdd", { fg = c.bg, bg = c.sign_add })
  hl(0, "DiffChange", { fg = c.bg, bg = c.sign_change, underline=true, })
  hl(0, "DiffDelete", { fg = c.bg, bg = c.sign_delete })
  hl(0, "QuickFixLine", { fg = 'NONE', bg = c.dark_yellow })
  hl(0, "MatchWord", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "MatchParen", { fg = c.orange, bg = 'NONE' })
  hl(0, "MatchWordCur", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "MatchParenCur", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "Cursor", { fg = c.cursor_fg, bg = c.cursor_bg })
  hl(0, "lCursor", { fg = c.cursor_fg, bg = c.cursor_bg })
  hl(0, "CursorIM", { fg = c.cursor_fg, bg = c.cursor_bg })
  hl(0, "TermCursor", { fg = c.cursor_fg, bg = c.cursor_bg })
  hl(0, "TermCursorNC", { fg = c.cursor_fg, bg = c.cursor_bg })
  hl(0, "Conceal", { fg = c.fg, bg = 'NONE' })
  hl(0, "Directory", { fg = c.gray09, bg = 'NONE' })
  hl(0, "SpecialKey", { fg = c.fg, bg = 'NONE', bold=true, })
  hl(0, "ErrorMsg", { fg = c.error, bg = c.bg, bold=true, })
  hl(0, "Search", { fg = c.gray01, bg = c.gray11,  })
  hl(0, "IncSearch", { fg = c.black, bg = c.gray07, bold=true, })
  hl(0, "Substitute", { fg = c.black, bg = c.gray13 })
  hl(0, "MoreMsg", { fg = c.dark_yellow, bg = 'NONE' })
  hl(0, "Question", { fg = c.dark_yellow, bg = 'NONE' })
  hl(0, "EndOfBuffer", { fg = c.bg, bg = 'NONE' })
  hl(0, "NonText", { fg = c.gray04, bg = 'NONE' })
  hl(0, "TabLine", { fg = c.gray09, bg = c.bg })
  hl(0, "TabLineSel", { fg = c.fg, bg = c.bg })
  hl(0, "TabLineFill", { fg = c.bg, bg = c.bg })

  -- code
  hl(0, "Comment", { fg = c.gray10, bg = 'NONE', italic=true, })
  hl(0, "Title", { fg = c.gray07, bg = 'NONE', bold=true, })
  hl(0, "String", { fg = c.gray10, bg = 'NONE' })
  hl(0, "Character", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Number", { fg = c.gray06, bg = 'NONE' })
  hl(0, "Float", { fg = c.gray06, bg = 'NONE' })
  hl(0, "Boolean", { fg = c.gray06, bg = 'NONE' })
  hl(0, "Constant", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Type", { fg = c.gray13, bg = 'NONE' })
  hl(0, "StorageClass", { fg = c.gray13, bg = 'NONE' })
  hl(0, "Structure", { fg = c.gray13, bg = 'NONE' })
  hl(0, "Typedef", { fg = c.gray13, bg = 'NONE' })
  hl(0, "PreProc", { fg = c.gray07, bg = 'NONE' })
  hl(0, "Include", { fg = c.gray07, bg = 'NONE' })
  hl(0, "Define", { fg = c.gray07, bg = 'NONE' })
  hl(0, "Macro", { fg = c.gray07, bg = 'NONE' })
  hl(0, "PreCondit", { fg = c.gray07, bg = 'NONE' })
  hl(0, "Statement", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Conditional", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Repeat", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Label", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Operator", { fg = c.gray13, bg = 'NONE' })
  hl(0, "Keyword", { fg = c.gray13, bg = 'NONE' })
  hl(0, "Exception", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Identifier", { fg = c.gray08, bg = 'NONE' })
  hl(0, "Function", { fg = c.gray08, bg = 'NONE' })
  hl(0, "Special", { fg = c.gray05, bg = 'NONE' })
  hl(0, "SpecialChar", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Tag", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Delimiter", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Debug", { fg = c.gray05, bg = 'NONE' })
  hl(0, "Bold", { fg = 'NONE', bg = 'NONE', bold=true, })
  hl(0, "Italic", { fg = 'NONE', bg = 'NONE', italic=true, })
  hl(0, "Underlined", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "Ignore", { fg = c.red, bg = 'NONE', bold=true, })
  hl(0, "Todo", { fg = c.red, bg = 'NONE', bold=true, })
  hl(0, "Error", { fg = c.error, bg = 'NONE', bold=true, })
  hl(0, "Variable", { fg = c.red, bg = 'NONE' })

  -- StatusLine
  hl(0, "StatusLine", { fg = c.gray11, bg = c.gray01 })
  hl(0, "StatusLineNC", { fg = c.gray04, bg = c.subtler_black })
  hl(0, "StatusLineSeparator", { fg = c.gray13, bg = 'NONE' })
  hl(0, "StatusLineTerm", { fg = c.gray13, bg = 'NONE' })
  hl(0, "StatusLineTermNC", { fg = c.gray13, bg = 'NONE' })

  -- git
  hl(0, "SignAdd", { fg = c.sign_add, bg = 'NONE' })
  hl(0, "SignChange", { fg = c.sign_change, bg = 'NONE' })
  hl(0, "SignDelete", { fg = c.sign_delete, bg = 'NONE' })
  hl(0, "GitSignsAdd", { fg = c.sign_add, bg = 'NONE' })
  hl(0, "GitSignsChange", { fg = c.sign_change, bg = 'NONE' })
  hl(0, "GitSignsDelete", { fg = c.sign_delete, bg = 'NONE' })

  -- IndentBlankline
  hl(0, "IndentBlanklineContextChar", { fg = c.gray08, bg = 'NONE' })
  hl(0, "IndentBlanklineContextStart", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "IndentBlanklineChar", { fg = 'NONE', bg = 'NONE', sp = 'NONE',  })

  -- packer
  hl(0, "packerString", { fg = c.orange, bg = 'NONE' })
  hl(0, "packerHash", { fg = c.blue, bg = 'NONE' })
  hl(0, "packerOutput", { fg = c.purple, bg = 'NONE' })
  hl(0, "packerRelDate", { fg = c.gray13, bg = 'NONE' })
  hl(0, "packerSuccess", { fg = c.green, bg = 'NONE' })
  hl(0, "packerStatusSuccess", { fg = c.blue, bg = 'NONE' })

  -- cmp
  hl(0, "CmpItemAbbrDeprecated", { fg = c.gray13, bg = 'NONE', strikethrough=true, })
  hl(0, "CmpItemAbbrMatch", { fg = c.gray15, bg = 'NONE' })
  hl(0, "CmpItemAbbrMatchFuzzy", { fg = c.gray11, bg = 'NONE' })
  hl(0, "CmpItemKindFunction", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindMethod", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindConstructor", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindClass", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindEnum", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindEvent", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindInterface", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindStruct", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindVariable", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindField", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindProperty", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindEnumMember", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindConstant", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindKeyword", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindModule", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindValue", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindUnit", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindText", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindSnippet", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindFile", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindFolder", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindColor", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindReference", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindOperator", { fg = c.blue, bg = 'NONE' })
  hl(0, "CmpItemKindTypeParameter", { fg = c.blue, bg = 'NONE' })

  -- NvimTree
  hl(0, "NvimTreeGitNew", { fg = c.sign_add_alt, bg = 'NONE' })
  hl(0, "NvimTreeGitRenamed", { fg = c.sign_add_alt, bg = 'NONE' })
  hl(0, "NvimTreeGitDeleted", { fg = c.sign_delete, bg = 'NONE' })
  hl(0, "NvimTreeGitMerge", { fg = c.sign_change_alt, bg = 'NONE' })

  -- Telescope
  hl(0, "TelescopeMatching", { fg = c.info, bg = 'NONE', bold=true, italic=true, })
  hl(0, "TelescopePromptPrefix", { fg = c.hint, bg = 'NONE' })
  hl(0, "TelescopePromptTitle", { fg = c.orange, bg = 'NONE', bold=true, })
  hl(0, "TelescopeResultsTitle", { fg = c.orange, bg = 'NONE', bold=true, })
  hl(0, "TelescopePreviewTitle", { fg = c.orange, bg = 'NONE', bold=true, })
  hl(0, "TelescopePreviewHyphen", { fg = c.red, bg = 'NONE' })

  -- Navic
  hl(0, "NavicIconsFile", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsModule", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsNamespace", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsPackage", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsClass", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsMethod", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsProperty", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsField", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsConstructor", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsEnum", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsInterface", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsFunction", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsVariable", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsConstant", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsString", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsNumber", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsBoolean", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsArray", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsObject", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsKey", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsKeyword", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsNull", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsEnumMember", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsStruct", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsEvent", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsOperator", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicIconsTypeParameter", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicText", { fg = c.gray06, bg = 'NONE' })
  hl(0, "NavicSeparator", { fg = c.gray06, bg = 'NONE' })
end

return theme